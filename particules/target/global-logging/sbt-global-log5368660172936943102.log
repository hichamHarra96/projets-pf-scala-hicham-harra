[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\hicham\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\hicham\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 925.6403ms
[debug]       Load.loadUnit: defsScala took 0.6402ms
[debug] [Loading] Scanning directory C:\Users\hicham\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\hicham\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 53.4911 ms
[debug]           Load.resolveProject(global-plugins) took 179.9934ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\hicham\.sbt\1.0\plugins, plugins: List(<none>))) took 434.3637ms
[debug] [Loading] Done in C:\Users\hicham\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 561.1619ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.8248ms
[debug]     Load.loadUnit(file:/C:/Users/hicham/.sbt/1.0/plugins/, ...) took 1640.6491ms
[debug]   Load.apply: load took 2906.9181ms
[debug]   Load.apply: resolveProjects took 20.2915ms
[debug]   Load.apply: finalTransforms took 485.5132ms
[debug]   Load.apply: config.delegates took 143.103ms
[debug]   Load.apply: Def.make(settings)... took 4499.4183ms
[debug]   Load.apply: structureIndex took 1417.0334ms
[debug]   Load.apply: mkStreams took 12.3614ms
[info] loading global plugins from C:\Users\hicham\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 47049.8224ms
[debug]           Load.loadUnit: plugins took 43.1819ms
[debug]           Load.loadUnit: defsScala took 0.0108ms
[debug] [Loading] Scanning directory C:\Users\hicham\Desktop\projet1\project
[debug]             Load.loadUnit: mkEval took 14.7896ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\hicham\Desktop\projet1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.5708 ms
[info] loading settings for project projet1-build from idea.sbt ...
[debug]               Load.resolveProject(projet1-build) took 10.8007ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projet1-build, base: C:\Users\hicham\Desktop\projet1\project, plugins: List(<none>))) took 15.8704ms
[debug] [Loading] Done in C:\Users\hicham\Desktop\projet1\project, returning: (projet1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6348.4697ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.1284ms
[debug]         Load.loadUnit(file:/C:/Users/hicham/Desktop/projet1/project/, ...) took 6406.5851ms
[debug]       Load.apply: load took 6410.689ms
[debug]       Load.apply: resolveProjects took 0.4012ms
[debug]       Load.apply: finalTransforms took 17.9931ms
[debug]       Load.apply: config.delegates took 0.6261ms
[debug]       Load.apply: Def.make(settings)... took 350.1083ms
[debug]       Load.apply: structureIndex took 100.33ms
[debug]       Load.apply: mkStreams took 0.0038ms
[info] loading project definition from C:\Users\hicham\Desktop\projet1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 8498.9176ms
[debug]     Load.loadUnit: defsScala took 0.0124ms
[debug] [Loading] Scanning directory C:\Users\hicham\Desktop\projet1
[debug]       Load.loadUnit: mkEval took 0.513ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.916 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 106.0743ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\hicham\Desktop\projet1, plugins: List(<none>))) took 114.8858ms
[debug] [Loading] Done in C:\Users\hicham\Desktop\projet1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 5606.3876ms
[debug]     Load.loadUnit: cleanEvalClasses took 34.919ms
[debug]   Load.loadUnit(file:/C:/Users/hicham/Desktop/projet1/, ...) took 14142.6726ms
[debug] Load.apply: load took 14146.7432ms
[debug] Load.apply: resolveProjects took 0.1665ms
[debug] Load.apply: finalTransforms took 92.6227ms
[debug] Load.apply: config.delegates took 4.7481ms
[debug] Load.apply: Def.make(settings)... took 297.3846ms
[debug] Load.apply: structureIndex took 87.6903ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to projet1 (in build file:/C:/Users/hicham/Desktop/projet1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49883 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49883, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to projet1 (in build file:/C:/Users/hicham/Desktop/projet1/)
[debug] > Exec(idea-shell, None, None)
