[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\hicham\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\hicham\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 357.548ms
[debug]       Load.loadUnit: defsScala took 0.7611ms
[debug] [Loading] Scanning directory C:\Users\hicham\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\hicham\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 43.0921 ms
[debug]           Load.resolveProject(global-plugins) took 112.7567ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\hicham\.sbt\1.0\plugins, plugins: List(<none>))) took 215.1173ms
[debug] [Loading] Done in C:\Users\hicham\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 293.2215ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5435ms
[debug]     Load.loadUnit(file:/C:/Users/hicham/.sbt/1.0/plugins/, ...) took 677.9642ms
[debug]   Load.apply: load took 1333.0746ms
[debug]   Load.apply: resolveProjects took 26.5087ms
[debug]   Load.apply: finalTransforms took 212.8014ms
[debug]   Load.apply: config.delegates took 22.4895ms
[debug]   Load.apply: Def.make(settings)... took 1441.4702ms
[debug]   Load.apply: structureIndex took 409.2882ms
[debug]   Load.apply: mkStreams took 3.2802ms
[info] loading global plugins from C:\Users\hicham\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8824.3629ms
[debug]           Load.loadUnit: plugins took 79.7828ms
[debug]           Load.loadUnit: defsScala took 0.0088ms
[debug] [Loading] Scanning directory C:\Users\hicham\Desktop\projet3\project
[debug]             Load.loadUnit: mkEval took 13.012ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\hicham\Desktop\projet3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2708 ms
[info] loading settings for project projet3-build from idea1.sbt ...
[debug]               Load.resolveProject(projet3-build) took 10.476ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projet3-build, base: C:\Users\hicham\Desktop\projet3\project, plugins: List(<none>))) took 14.5637ms
[debug] [Loading] Done in C:\Users\hicham\Desktop\projet3\project, returning: (projet3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3298.9319ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.442ms
[debug]         Load.loadUnit(file:/C:/Users/hicham/Desktop/projet3/project/, ...) took 3393.2001ms
[debug]       Load.apply: load took 3397.7234ms
[debug]       Load.apply: resolveProjects took 0.2622ms
[debug]       Load.apply: finalTransforms took 12.4871ms
[debug]       Load.apply: config.delegates took 0.5212ms
[debug]       Load.apply: Def.make(settings)... took 105.1758ms
[debug]       Load.apply: structureIndex took 55.0469ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\hicham\Desktop\projet3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5371.9768ms
[debug]     Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\hicham\Desktop\projet3
[debug]       Load.loadUnit: mkEval took 0.2886ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.3436 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 43.6005ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\hicham\Desktop\projet3, plugins: List(<none>))) took 49.3705ms
[debug] [Loading] Done in C:\Users\hicham\Desktop\projet3, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1917.5125ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.7464ms
[debug]   Load.loadUnit(file:/C:/Users/hicham/Desktop/projet3/, ...) took 7308.7212ms
[debug] Load.apply: load took 7312.338ms
[debug] Load.apply: resolveProjects took 0.2541ms
[debug] Load.apply: finalTransforms took 37.885ms
[debug] Load.apply: config.delegates took 0.3944ms
[debug] Load.apply: Def.make(settings)... took 104.925ms
[debug] Load.apply: structureIndex took 38.0436ms
[debug] Load.apply: mkStreams took 0.0082ms
[info] set current project to projet1 (in build file:/C:/Users/hicham/Desktop/projet3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49883 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49883, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to projet1 (in build file:/C:/Users/hicham/Desktop/projet3/)
[debug] > Exec(idea-shell, None, None)
